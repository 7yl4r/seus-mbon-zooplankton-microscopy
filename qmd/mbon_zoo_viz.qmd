---
title: "MBON Zooplankton Quick Visual"
author: 
  - Sebastian Di Geronimo
  - Tylar Murray
date: 2025-02-14
format: html
editor: source
---

# 1.0 ---- Summary of Document ----

This is a reproduced examples from *google colab* by Tylar

# 2.0 ---- Setup ----


## 2.1 Load Libraries

```{r setup, include=FALSE}
if (!nzchar(system.file(package = "librarian"))) 
  install.packages("librarian")

librarian::shelf(
  quiet = TRUE,
  librarian, conflicted, ggplot2, tibble, tidyr, readr, purrr, dplyr, stringr,
  forcats, lubridate, glue, fs, magrittr, here,
  
  # additional
  prismatic
)

conflicts_prefer(
  dplyr::filter(), 
  dplyr::select()
  )
```

## 2.2 Load Dataset

```{R load file}
#| code-summary: load file
dat <- 
  here("data", "zoo_data_pre_obis_merg.csv") %>%
  read_csv(show_col_types = FALSE) %T>% 
  print()

skimr::skim_tee(dat)

dat <- 
  dat %>%
  select(
    cruise_id,
    station, site, 
    mesh,
    date_time, date, time_gmt,
    lat_in, lon_in,
    maximumDepthInMeters,
    volume_filt_cubic_m,
    taxa, scientificname, lifeStage, ind_m3, number_ind_sample,
    kingdom:genus
  ) %T>% 
  print()
```


```{r}
print(paste("stations:", paste(unique(dat$station), collapse = ", ")))
print(paste("stations:", paste(unique(dat$site), collapse = ", ")))
print(paste("mesh sizes available: ", paste(unique(dat$mesh), collapse = ", ")))
print(paste("life stages:", paste(unique(dat$lifeStage), collapse = ", ")))

```

```{r}
# === constants
const <- list(
  taxa_lvl = "phylum", # lowest taxa level
  mesh     = 200,
  site     = "WS"
)

taxa_tree <- 
  c("kingdom", "phylum", "class", "order", "family", "genus", "scientificname") %>%
  rev()


const$taxa_lvl <- taxa_tree[which(taxa_tree == const$taxa_lvl):length(taxa_tree)]
```

```{r}

# === filter
dat_filtered <-
  dat %>%
  filter(
    str_detect(site, const$site) # site
    & mesh == const$mesh # mesh size
    & is.na(lifeStage) # assumed na is adult
  ) %>%
  mutate(
    year = year(date_time), 
    date_month = ym(format(date, "%Y-%m")),
    .after = date) %>% # column for year
  mutate(
    # .keep = "used",
    scientificname, kingdom, phylum, class, order, family, genus,
    taxa_level = pmap_chr(
      # across(c(kingdom:genus)),
      across(c(const$taxa_lvl)),
      \(...) {
        dat <- c(...)
        taxa_name <- NA
        for (i in seq(length(dat))) {
          if (is.na(taxa_name)) {
            taxa_name <- dat[i]
          } else {
            taxa_name
          }
        }
        return(taxa_name)
      }
    ),
  ) %T>%
  print() 

# dat_filtered <- dat_filtered[dat_filtered['site'] == const$site, ]
# dat_filtered <- dat_filtered[dat_filtered['mesh'] == const$mesh, ]
# dat_filtered <- dat_filtered[is.na(dat_filtered['lifeStage']), ]  # select only adults (empty)



# === Group data then count (or average)
# avg # individuals / m^3
grouped_data <- 
  dat_filtered  %>%
  # rename(taxa_level = const$taxa_lvl) %>%
  # mutate(taxa_level = if_else(is.na(taxa_level), phylum, taxa_level)) %>%
  summarise(
    .by = c(site, year, date_month, taxa_level),
    # ind_m3 = mean(ind_m3)
    ind_m3 = sum(ind_m3)
  ) %T>% 
  print()
```

```{r plot-data}
# === Iterate over unique stations and create stacked bar charts
dat_filtered %>%
  summarise(
    .by = c(taxa_level, site, year),
    ind_m3 = mean(ind_m3),
    
  ) %>%
  mutate(
    taxa_level = fct_reorder(taxa_level, ind_m3, .fun = max)
  ) %>%
  ggplot(
    aes(x = year, y = ind_m3, fill = taxa_level,
    color = after_scale(prismatic::clr_darken(fill, 0.3))
        ),
    ) +
  geom_col() +
  labs(
    y = NULL,
    x = "Year",
    title = glue("`{const$taxa_lvl[1]}` for Year for Station {const$site} (mesh size {const$mesh})")
  ) +
  scale_y_continuous(expand = c(0, 0)) +
  scale_fill_viridis_d(option = "A") +
  guides(fill = guide_legend(ncol = 2, byrow = TRUE)) +
  theme_classic() +
  theme(
    # legend.position = "inside",
    # legend.position.inside = c(0.9, 0.7),
    legend.box.background = element_rect(color = "grey")
  )
```


```{r plot-data}
# === Iterate over unique stations and create stacked bar charts
grouped_data %>%
  mutate(
    .by = c(site, date_month),
    total = sum(ind_m3),
    percent = ind_m3 / total
  ) %>%
  mutate(
    taxa_level = fct_reorder(taxa_level, ind_m3, .fun = max),
    date_month2 = fct_reorder(format(date_month, "%b %Y"), date_month)
  ) %>%
  ggplot(
    aes(x = date_month2, y = percent, fill = taxa_level, 
        color = after_scale(prismatic::clr_darken(fill, 0.3))
        )
         ) +
  geom_col() +
  labs(
    y = NULL,
    x = "Year",
    title = glue("`{const$taxa_lvl[1]}` for Year for Station {const$site} (mesh size {const$mesh})")
  ) +
  scale_y_continuous(
    expand = c(0, 0),
    labels = scales::label_percent()
  ) +
  scale_fill_viridis_d(option = "A") +
  guides(fill = guide_legend(ncol = 2, byrow = TRUE)) +
  theme_classic() +
  theme(
    # legend.position = "inside",
    # legend.position.inside = c(0.9, 0.7),
    legend.box.background = element_rect(color = "grey"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

