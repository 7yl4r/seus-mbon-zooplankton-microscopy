[
  {
    "objectID": "qmd/simple_csv_check.html",
    "href": "qmd/simple_csv_check.html",
    "title": "CSV checker",
    "section": "",
    "text": "setup\nlibrary(ggplot2)\nlibrary(here)\nlibrary(skimr)\n\n\n\n\nload file\ndata &lt;- read.csv(here(\"data/zoo_data_pre_obis_merg.csv\"))\n\n\n\n\nPrint basic diagnostic information\n# print(head(data))     # View first few rows\n# print(str(data))      # Structure of the data frame\n# print(summary(data))  # Statistical summary of the data\n#  Use skimr to provide a detailed summary\nskimmed_data &lt;- skimr::skim(data)\nprint(skimmed_data)\n\n\n── Data Summary ────────────────────────\n                           Values\nName                       data  \nNumber of rows             2297  \nNumber of columns          73    \n_______________________          \nColumn type frequency:           \n  character                31    \n  logical                  1     \n  numeric                  41    \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n   skim_variable    n_missing complete_rate min max empty n_unique whitespace\n 1 file_metadta             0             1  27  40     0       16          0\n 2 cruise_id                0             1   7   7     0       16          0\n 3 station                  0             1   2  15     0        5          0\n 4 site                     0             1   2   2     0        5          0\n 5 date_time                0             1  20  20     0       50          0\n 6 date                     0             1  20  20     0       31          0\n 7 time_gmt                 0             1   8   8     0       47          0\n 8 notes                    0             1   0  29  2114        4          0\n 9 taxa_orig                0             1   5  26     0       91          0\n10 taxa                     0             1   6  21     0       82          0\n11 lifeStage                0             1   0   9  1733        8          0\n12 scientificName           0             1   6  20     0       77          0\n13 scientificNameID         0             1  38  41     0       77          0\n14 match_type               0             1   5   8     0        4          0\n15 date_analyzed            0             1  10  10     0       53          0\n16 url                      0             1  59  62     0       77          0\n17 scientificname           0             1   6  20     0       77          0\n18 authority                0             1   0  24   209       56          0\n19 status                   0             1   8  22     0        2          0\n20 rank                     0             1   5  10     0       11          0\n21 valid_name               0             1   6  20     0       77          0\n22 valid_authority          0             1   0  24   209       56          0\n23 kingdom                  0             1   8   9     0        2          0\n24 phylum                   0             1   7  13     0       10          0\n25 class                    0             1   0  14   244       18          0\n26 order                    0             1   0  17   515       20          0\n27 family                   0             1   0  16  1004       33          0\n28 genus                    0             1   0  13  1117       41          0\n29 citation                 0             1 110 667     0       77          0\n30 lsid                     0             1  38  41     0       77          0\n31 modified                 0             1  20  20     0       67          0\n\n── Variable type: logical ──────────────────────────────────────────────────────\n  skim_variable  n_missing complete_rate mean count\n1 unacceptreason      2297             0  NaN \": \" \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n   skim_variable                 n_missing complete_rate       mean          sd\n 1 mesh                                  0         1        331.       158.    \n 2 lat_in                                0         1         24.7        0.255 \n 3 lon_in                                0         1        -81.2        0.553 \n 4 coordinateUncertaintyInMeters         0         1        500          0     \n 5 minimumDepthInMeters                  0         1          0          0     \n 6 maximumDepthInMeters                  0         1         32.7        8.68  \n 7 flowmeter_in                          0         1       1300.     11457.    \n 8 flowmeter_out                         0         1       5106.     13439.    \n 9 flowmeter_diff                        0         1       3806.      7424.    \n10 ship_speed_knots                      0         1          1.46       0.134 \n11 inpeller_constant                     0         1          0.245      0     \n12 split_size                            0         1          0.491      0.0477\n13 tow_time_min                          0         1          4.74       1.34  \n14 net_size                              0         1          0.505      0.0216\n15 net_area                              0         1          0.201      0.0187\n16 distance_m                            0         1        932.      1819.    \n17 tow_speed_m_sec                       0         1          3.72       6.35  \n18 volume_filt_cubic_m                   0         1        186.       357.    \n19 pipette_vol_m_l                       0         1          4.98       0.657 \n20 dillution                             0         1        782.       278.    \n21 dillution_factor                      0         1        162.        74.6   \n22 split_amount                          0         1          0.175      0.495 \n23 splits_analyzed                    1789         0.221      0.223      0.218 \n24 individualCount                       0         1          9.80      27.3   \n25 aliquot_1                             0         1          3.33       9.05  \n26 aliquot_2                             0         1          3.30      10.2   \n27 aliquot_3                             0         1          3.18       8.82  \n28 mean                                  0         1          3.27       9.10  \n29 ind_m3                                0         1         24.3      123.    \n30 number_ind_sample                     0         1       1871.      9334.    \n31 total_split_amount                    0         1          2.53       1.41  \n32 total_split_frac                      0         1          0.453      0.109 \n33 aphiaID                               0         1      89110.     71018.    \n34 taxon_rank_id                         0         1        136.        55.9   \n35 valid_aphia_id                        0         1      89292.     71723.    \n36 parent_name_usage_id                  0         1     192979.    315123.    \n37 is_marine                             0         1          1          0     \n38 is_brackish                         228         0.901      0.473      0.499 \n39 is_freshwater                       264         0.885      0.319      0.466 \n40 is_terrestrial                      287         0.875      0.158      0.365 \n41 is_extinct                         1717         0.253      0          0     \n         p0        p25        p50        p75        p100 hist \n 1  64         200        200        500         500     ▁▇▁▁▇\n 2  24.5        24.5       24.5       25.0        25.4   ▇▁▁▃▁\n 3 -81.7       -81.7      -81.4      -80.4       -80.4   ▇▇▁▁▆\n 4 500         500        500        500         500     ▁▁▇▁▁\n 5   0           0          0          0           0     ▁▁▇▁▁\n 6   5          23         36.5       40.5        40.5   ▁▁▃▁▇\n 7   0           0          0          0      119811     ▇▁▁▁▁\n 8 100        1009       2973       4474      120111     ▇▁▁▁▁\n 9 100        1009       2969       4360       77000     ▇▁▁▁▁\n10   1           1.5        1.5        1.5         1.5   ▁▁▁▁▇\n11   0.245       0.245      0.245      0.245       0.245 ▁▁▇▁▁\n12   0.25        0.5        0.5        0.5         0.5   ▁▁▁▁▇\n13   1           5          5          5           8     ▂▁▇▁▁\n14   0.5         0.5        0.5        0.5         0.6   ▇▁▁▁▁\n15   0.196       0.196      0.196      0.196       0.283 ▇▁▁▁▁\n16  24.5       247.       727.      1068.      18865     ▇▁▁▁▁\n17   0.0817      1.17       2.43       4.08       62.9   ▇▁▁▁▁\n18   4.81       48.5      143.       215.       3704.    ▇▁▁▁▁\n19   2           5          5          5          10     ▁▇▁▁▁\n20 150         500       1000       1000        1000     ▁▂▂▁▇\n21  30         100        200        200         500     ▅▇▁▁▁\n22   0           0          0          0           2     ▇▁▁▁▁\n23   0           0          0.25       0.5         0.5   ▇▁▅▁▆\n24   1           1          3          8         597     ▇▁▁▁▁\n25   0           0          1          3         160     ▇▁▁▁▁\n26   0           0          1          3         265     ▇▁▁▁▁\n27   0           0          1          3         182     ▇▁▁▁▁\n28   0.333       0.333      1          2.67      199     ▇▁▁▁▁\n29   0.0108      0.932      2.77      11.1      3060.    ▇▁▁▁▁\n30  26.7       133.       267.       960      211733.    ▇▁▁▁▁\n31   2           2          2          2           8     ▇▁▁▁▁\n32   0.125       0.5        0.5        0.5         0.5   ▁▁▁▁▇\n33 101       10194     104193     106727      347746     ▃▇▁▁▁\n34  30         100        180        180         220     ▃▂▂▇▁\n35 101       10194     104193     106727      574543     ▇▂▁▁▁\n36   2      104079     104106     128586     1740301     ▇▁▁▁▁\n37   1           1          1          1           1     ▁▁▇▁▁\n38   0           0          0          1           1     ▇▁▁▁▇\n39   0           0          0          1           1     ▇▁▁▁▃\n40   0           0          0          0           1     ▇▁▁▁▂\n41   0           0          0          0           0     ▁▁▇▁▁\n\n\nPrint basic diagnostic information\nskimr::skim_tee(data)\n\n\n── Data Summary ────────────────────────\n                           Values\nName                       data  \nNumber of rows             2297  \nNumber of columns          73    \n_______________________          \nColumn type frequency:           \n  character                31    \n  logical                  1     \n  numeric                  41    \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n   skim_variable    n_missing complete_rate min max empty n_unique whitespace\n 1 file_metadta             0             1  27  40     0       16          0\n 2 cruise_id                0             1   7   7     0       16          0\n 3 station                  0             1   2  15     0        5          0\n 4 site                     0             1   2   2     0        5          0\n 5 date_time                0             1  20  20     0       50          0\n 6 date                     0             1  20  20     0       31          0\n 7 time_gmt                 0             1   8   8     0       47          0\n 8 notes                    0             1   0  29  2114        4          0\n 9 taxa_orig                0             1   5  26     0       91          0\n10 taxa                     0             1   6  21     0       82          0\n11 lifeStage                0             1   0   9  1733        8          0\n12 scientificName           0             1   6  20     0       77          0\n13 scientificNameID         0             1  38  41     0       77          0\n14 match_type               0             1   5   8     0        4          0\n15 date_analyzed            0             1  10  10     0       53          0\n16 url                      0             1  59  62     0       77          0\n17 scientificname           0             1   6  20     0       77          0\n18 authority                0             1   0  24   209       56          0\n19 status                   0             1   8  22     0        2          0\n20 rank                     0             1   5  10     0       11          0\n21 valid_name               0             1   6  20     0       77          0\n22 valid_authority          0             1   0  24   209       56          0\n23 kingdom                  0             1   8   9     0        2          0\n24 phylum                   0             1   7  13     0       10          0\n25 class                    0             1   0  14   244       18          0\n26 order                    0             1   0  17   515       20          0\n27 family                   0             1   0  16  1004       33          0\n28 genus                    0             1   0  13  1117       41          0\n29 citation                 0             1 110 667     0       77          0\n30 lsid                     0             1  38  41     0       77          0\n31 modified                 0             1  20  20     0       67          0\n\n── Variable type: logical ──────────────────────────────────────────────────────\n  skim_variable  n_missing complete_rate mean count\n1 unacceptreason      2297             0  NaN \": \" \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n   skim_variable                 n_missing complete_rate       mean          sd\n 1 mesh                                  0         1        331.       158.    \n 2 lat_in                                0         1         24.7        0.255 \n 3 lon_in                                0         1        -81.2        0.553 \n 4 coordinateUncertaintyInMeters         0         1        500          0     \n 5 minimumDepthInMeters                  0         1          0          0     \n 6 maximumDepthInMeters                  0         1         32.7        8.68  \n 7 flowmeter_in                          0         1       1300.     11457.    \n 8 flowmeter_out                         0         1       5106.     13439.    \n 9 flowmeter_diff                        0         1       3806.      7424.    \n10 ship_speed_knots                      0         1          1.46       0.134 \n11 inpeller_constant                     0         1          0.245      0     \n12 split_size                            0         1          0.491      0.0477\n13 tow_time_min                          0         1          4.74       1.34  \n14 net_size                              0         1          0.505      0.0216\n15 net_area                              0         1          0.201      0.0187\n16 distance_m                            0         1        932.      1819.    \n17 tow_speed_m_sec                       0         1          3.72       6.35  \n18 volume_filt_cubic_m                   0         1        186.       357.    \n19 pipette_vol_m_l                       0         1          4.98       0.657 \n20 dillution                             0         1        782.       278.    \n21 dillution_factor                      0         1        162.        74.6   \n22 split_amount                          0         1          0.175      0.495 \n23 splits_analyzed                    1789         0.221      0.223      0.218 \n24 individualCount                       0         1          9.80      27.3   \n25 aliquot_1                             0         1          3.33       9.05  \n26 aliquot_2                             0         1          3.30      10.2   \n27 aliquot_3                             0         1          3.18       8.82  \n28 mean                                  0         1          3.27       9.10  \n29 ind_m3                                0         1         24.3      123.    \n30 number_ind_sample                     0         1       1871.      9334.    \n31 total_split_amount                    0         1          2.53       1.41  \n32 total_split_frac                      0         1          0.453      0.109 \n33 aphiaID                               0         1      89110.     71018.    \n34 taxon_rank_id                         0         1        136.        55.9   \n35 valid_aphia_id                        0         1      89292.     71723.    \n36 parent_name_usage_id                  0         1     192979.    315123.    \n37 is_marine                             0         1          1          0     \n38 is_brackish                         228         0.901      0.473      0.499 \n39 is_freshwater                       264         0.885      0.319      0.466 \n40 is_terrestrial                      287         0.875      0.158      0.365 \n41 is_extinct                         1717         0.253      0          0     \n         p0        p25        p50        p75        p100 hist \n 1  64         200        200        500         500     ▁▇▁▁▇\n 2  24.5        24.5       24.5       25.0        25.4   ▇▁▁▃▁\n 3 -81.7       -81.7      -81.4      -80.4       -80.4   ▇▇▁▁▆\n 4 500         500        500        500         500     ▁▁▇▁▁\n 5   0           0          0          0           0     ▁▁▇▁▁\n 6   5          23         36.5       40.5        40.5   ▁▁▃▁▇\n 7   0           0          0          0      119811     ▇▁▁▁▁\n 8 100        1009       2973       4474      120111     ▇▁▁▁▁\n 9 100        1009       2969       4360       77000     ▇▁▁▁▁\n10   1           1.5        1.5        1.5         1.5   ▁▁▁▁▇\n11   0.245       0.245      0.245      0.245       0.245 ▁▁▇▁▁\n12   0.25        0.5        0.5        0.5         0.5   ▁▁▁▁▇\n13   1           5          5          5           8     ▂▁▇▁▁\n14   0.5         0.5        0.5        0.5         0.6   ▇▁▁▁▁\n15   0.196       0.196      0.196      0.196       0.283 ▇▁▁▁▁\n16  24.5       247.       727.      1068.      18865     ▇▁▁▁▁\n17   0.0817      1.17       2.43       4.08       62.9   ▇▁▁▁▁\n18   4.81       48.5      143.       215.       3704.    ▇▁▁▁▁\n19   2           5          5          5          10     ▁▇▁▁▁\n20 150         500       1000       1000        1000     ▁▂▂▁▇\n21  30         100        200        200         500     ▅▇▁▁▁\n22   0           0          0          0           2     ▇▁▁▁▁\n23   0           0          0.25       0.5         0.5   ▇▁▅▁▆\n24   1           1          3          8         597     ▇▁▁▁▁\n25   0           0          1          3         160     ▇▁▁▁▁\n26   0           0          1          3         265     ▇▁▁▁▁\n27   0           0          1          3         182     ▇▁▁▁▁\n28   0.333       0.333      1          2.67      199     ▇▁▁▁▁\n29   0.0108      0.932      2.77      11.1      3060.    ▇▁▁▁▁\n30  26.7       133.       267.       960      211733.    ▇▁▁▁▁\n31   2           2          2          2           8     ▇▁▁▁▁\n32   0.125       0.5        0.5        0.5         0.5   ▁▁▁▁▇\n33 101       10194     104193     106727      347746     ▃▇▁▁▁\n34  30         100        180        180         220     ▃▂▂▇▁\n35 101       10194     104193     106727      574543     ▇▂▁▁▁\n36   2      104079     104106     128586     1740301     ▇▁▁▁▁\n37   1           1          1          1           1     ▁▁▇▁▁\n38   0           0          0          1           1     ▇▁▁▁▇\n39   0           0          0          1           1     ▇▁▁▁▃\n40   0           0          0          0           1     ▇▁▁▁▂\n41   0           0          0          0           0     ▁▁▇▁▁\n\n\n\ncolumn-specific checks:\n\n\ndiagnose char column that should be numeric\ncolname &lt;- \"lat_in\"\n# Convert row to numeric. Non-convertible entries will become NA\nnumeric_colname &lt;- paste(colname, \"_as_numeric\", sep = \"\")\ndata[[numeric_colname]] &lt;- as.numeric(as.character(data[[colname]]))\n\n# Check for NAs which indicate problematic entries\nnum_non_numeric &lt;- sum(is.na(data[[numeric_colname]]))\n\n# Print the number of non-numeric rows\nprint(paste(\"Number of non-numeric rows in 'NumericColumn':\", num_non_numeric))\n\n\n[1] \"Number of non-numeric rows in 'NumericColumn': 0\"\n\n\ndiagnose char column that should be numeric\n# Optional: To see which rows are non-numeric\nproblematic_rows &lt;- data[is.na(data[[numeric_colname]]), ]\nprint(problematic_rows)\n\n\n [1] file_metadta                  cruise_id                    \n [3] station                       site                         \n [5] mesh                          date_time                    \n [7] date                          time_gmt                     \n [9] lat_in                        lon_in                       \n[11] coordinateUncertaintyInMeters minimumDepthInMeters         \n[13] maximumDepthInMeters          flowmeter_in                 \n[15] flowmeter_out                 flowmeter_diff               \n[17] ship_speed_knots              inpeller_constant            \n[19] split_size                    notes                        \n[21] tow_time_min                  net_size                     \n[23] net_area                      distance_m                   \n[25] tow_speed_m_sec               volume_filt_cubic_m          \n[27] taxa_orig                     taxa                         \n[29] lifeStage                     scientificName               \n[31] scientificNameID              match_type                   \n[33] date_analyzed                 pipette_vol_m_l              \n[35] dillution                     dillution_factor             \n[37] split_amount                  splits_analyzed              \n[39] individualCount               aliquot_1                    \n[41] aliquot_2                     aliquot_3                    \n[43] mean                          ind_m3                       \n[45] number_ind_sample             total_split_amount           \n[47] total_split_frac              aphiaID                      \n[49] url                           scientificname               \n[51] authority                     status                       \n[53] unacceptreason                taxon_rank_id                \n[55] rank                          valid_aphia_id               \n[57] valid_name                    valid_authority              \n[59] parent_name_usage_id          kingdom                      \n[61] phylum                        class                        \n[63] order                         family                       \n[65] genus                         citation                     \n[67] lsid                          is_marine                    \n[69] is_brackish                   is_freshwater                \n[71] is_terrestrial                is_extinct                   \n[73] modified                      lat_in_as_numeric            \n&lt;0 rows&gt; (or 0-length row.names)\n\n\nLooking at a histogram of individualCount we can see that rows generally have low numbers of individuals:\n\n\nHistogram of a numeric column\nhist(data$individualCount)\n\n\n\n\n\n\n\n\n\nA scatter plot between the ind_m3 and individualCount shows that rows with more individuals also have a higher density of individuals per volume.\n\n\nScatter plot between two variables\nplot(data$individualCount, data$ind_m3, main = \"Scatter plot\", xlab = \"ind_m3\", ylab = \"individualCount\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "seus-mbon-zooplankton-microscopy",
    "section": "",
    "text": "seus-mbon-zooplankton-microscopy\nAnalyses of SouthEast US MBON research cruise zooplankton microscopy data."
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html",
    "href": "qmd/mbon_zoo_viz.html",
    "title": "MBON Zooplankton Quick Visual",
    "section": "",
    "text": "This is a reproduced examples from google colab by Tylar"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#load-libraries",
    "href": "qmd/mbon_zoo_viz.html#load-libraries",
    "title": "MBON Zooplankton Quick Visual",
    "section": "2.1 Load Libraries",
    "text": "2.1 Load Libraries"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#print-information",
    "href": "qmd/mbon_zoo_viz.html#print-information",
    "title": "MBON Zooplankton Quick Visual",
    "section": "3.1 Print Information",
    "text": "3.1 Print Information\nInformation for station and site names, mesh sizes and life stages\n\n\nCode\nprint(paste(\"stations:\", paste(unique(dat$station), collapse = \", \")))\n\n\n[1] \"stations: Molasses Reef, Looe Key (deep), Western Sambo\"\n\n\nCode\nprint(paste(\"stations:\", paste(unique(dat$site), collapse = \", \")))\n\n\n[1] \"stations: MR, LK, WS\"\n\n\nCode\nprint(paste(\"mesh sizes available: \", paste(unique(dat$mesh), collapse = \", \")))\n\n\n[1] \"mesh sizes available:  500, 200, 64\"\n\n\nCode\nprint(paste(\"life stages:\", paste(unique(dat$lifeStage), collapse = \", \")))\n\n\n[1] \"life stages: larvae, NA, eggs, nauplii, zoea, megalopa, protozoea, larva\"\n\n\nCode\ndat_nest &lt;- dat %&gt;%\n  nest(data = c(taxa:last_col()))\ncount(dat_nest, station, site)\n\n\n# A tibble: 3 × 3\n  station         site      n\n  &lt;chr&gt;           &lt;chr&gt; &lt;int&gt;\n1 Looe Key (deep) LK       30\n2 Molasses Reef   MR       26\n3 Western Sambo   WS       27\n\n\nCode\ncount(dat_nest, station, site, mesh)\n\n\n# A tibble: 7 × 4\n  station         site   mesh     n\n  &lt;chr&gt;           &lt;chr&gt; &lt;dbl&gt; &lt;int&gt;\n1 Looe Key (deep) LK       64     2\n2 Looe Key (deep) LK      200    13\n3 Looe Key (deep) LK      500    15\n4 Molasses Reef   MR      200    11\n5 Molasses Reef   MR      500    15\n6 Western Sambo   WS      200    13\n7 Western Sambo   WS      500    14\n\n\nCode\ncount(dat_nest, station, site, mesh, date_month)\n\n\n# A tibble: 83 × 5\n   station         site   mesh date_month     n\n   &lt;chr&gt;           &lt;chr&gt; &lt;dbl&gt; &lt;date&gt;     &lt;int&gt;\n 1 Looe Key (deep) LK       64 2019-01-01     1\n 2 Looe Key (deep) LK       64 2020-01-01     1\n 3 Looe Key (deep) LK      200 2017-06-01     1\n 4 Looe Key (deep) LK      200 2018-01-01     1\n 5 Looe Key (deep) LK      200 2018-03-01     1\n 6 Looe Key (deep) LK      200 2018-06-01     1\n 7 Looe Key (deep) LK      200 2018-08-01     1\n 8 Looe Key (deep) LK      200 2018-10-01     1\n 9 Looe Key (deep) LK      200 2018-12-01     1\n10 Looe Key (deep) LK      200 2019-01-01     1\n# ℹ 73 more rows"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#plot-the-indm3-based-on-year",
    "href": "qmd/mbon_zoo_viz.html#plot-the-indm3-based-on-year",
    "title": "MBON Zooplankton Quick Visual",
    "section": "6.1 Plot the Ind/m^3 based on Year",
    "text": "6.1 Plot the Ind/m^3 based on Year\nEither sum or mean\n\n\nCode\n# === Iterate over unique stations and create stacked bar charts\ndat_filtered %&gt;%\n  summarise(\n    .by = c(taxa_level, site, year),\n    # ind_m3 = mean(ind_m3),\n    ind_m3 = sum(ind_m3),\n    \n  ) %&gt;%\n  mutate(\n    taxa_level = fct_reorder(taxa_level, ind_m3, .fun = max)\n  ) %&gt;%\n  ggplot(\n    aes(x = year, y = ind_m3, fill = taxa_level,\n    color = after_scale(prismatic::clr_darken(fill, 0.3))\n        ),\n    ) +\n  geom_col() +\n  labs(\n    y = NULL,\n    x = \"Year\",\n    fill  = \"Taxa Name\",\n    title = glue(\"`{const$taxa_lvl[1]}` for Year for Station {const$site} (mesh size {const$mesh})\")\n  ) +\n  scale_y_continuous(expand = c(0, 0)) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 2, byrow = TRUE)) +\n  theme_classic() +\n  theme(\n    legend.box.background = element_rect(color = \"grey\")\n  )"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#plot-the-indm3-based-on-month-and-year",
    "href": "qmd/mbon_zoo_viz.html#plot-the-indm3-based-on-month-and-year",
    "title": "MBON Zooplankton Quick Visual",
    "section": "6.2 Plot the Ind/m^3 based on Month and Year",
    "text": "6.2 Plot the Ind/m^3 based on Month and Year\nEither sum or mean\n\n\nCode\ndat_filtered %&gt;%\n    summarise(\n    .by = c(site, year, date_month, taxa_level),\n    # ind_m3 = mean(ind_m3)\n    ind_m3 = sum(ind_m3)\n  ) %&gt;%\n  mutate(\n    .by     = c(site, date_month),\n    total   = sum(ind_m3),\n    percent = ind_m3 / total\n  ) %&gt;%\n  mutate(\n    taxa_level = fct_reorder(taxa_level, percent, .fun = max),\n    date_month2 = fct_reorder(format(date_month, \"%b %Y\"), date_month)\n  ) %&gt;%\n  ggplot(\n    aes(x = date_month2, y = ind_m3, fill = taxa_level, \n        color = after_scale(prismatic::clr_darken(fill, 0.3))\n        )\n         ) +\n  geom_col() +\n  labs(\n    y = NULL,\n    x = \"Year\",\n    fill  = \"Taxa Name\",\n    title = glue(\"`{const$taxa_lvl[1]}` for Year for Station {const$site} (mesh size {const$mesh})\")\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0)\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 2, byrow = TRUE)) +\n  theme_classic() +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#plot-the-percent-indm3-based-on-month-and-year",
    "href": "qmd/mbon_zoo_viz.html#plot-the-percent-indm3-based-on-month-and-year",
    "title": "MBON Zooplankton Quick Visual",
    "section": "6.2 Plot the Percent (%) Ind/m^3 based on Month and Year",
    "text": "6.2 Plot the Percent (%) Ind/m^3 based on Month and Year\nEither sum or mean\n\n\nCode\ndat_filtered %&gt;%\n    summarise(\n    .by = c(site, year, date_month, taxa_level),\n    # ind_m3 = mean(ind_m3)\n    ind_m3 = sum(ind_m3)\n  ) %&gt;%\n  mutate(\n    .by     = c(site, date_month),\n    total   = sum(ind_m3),\n    percent = ind_m3 / total\n  ) %&gt;%\n  mutate(\n    taxa_level = fct_reorder(taxa_level, percent, .fun = max),\n    date_month2 = fct_reorder(format(date_month, \"%b %Y\"), date_month)\n  ) %&gt;%\n  ggplot(\n    aes(x = date_month2, \n        y = percent, \n        fill  = taxa_level, \n        color = after_scale(prismatic::clr_darken(fill, 0.3))\n        )\n         ) +\n  geom_col() +\n  labs(\n    y = NULL,\n    x = NULL,\n    fill  = \"Taxa Name\",\n    title = glue(\"`{const$taxa_lvl[1]}` for Cruise for Station {const$site} (mesh size {const$mesh})\")\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    labels = scales::label_percent()\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 2, byrow = TRUE)) +\n  theme_classic() +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#μm",
    "href": "qmd/mbon_zoo_viz.html#μm",
    "title": "MBON Zooplankton Quick Visual",
    "section": "7.1 200 μm",
    "text": "7.1 200 μm\n\n\nCode\ndat_lowest_200 &lt;-\n  dat %&gt;%\n  filter(\n    mesh == 200           # mesh size\n    & is.na(lifeStage)      # assumed na is adult\n  )  %&gt;% \n  mutate(\n    site = fct(site, c(\"MR\", \"LK\", \"WS\")),\n    station = fct(station, c(\"Molasses Reef\", \"Looe Key (deep)\", \"Western Sambo\")), \n    # select the lowest taxa name available\n    taxa_level = pmap_chr(\n      across(c(const$taxa_lvl)),\n      \\(...) {\n        dat &lt;- c(...) # combine all names into a vector\n        taxa_name &lt;- NA\n        # loop through all names to select the lowest name\n        for (i in seq(length(dat))) {\n          if (is.na(taxa_name)) {\n            taxa_name &lt;- dat[i]\n          } else {\n            taxa_name\n          }\n        }\n        return(taxa_name)\n      }\n    ),\n  ) %T&gt;%\n  print() \n\n\n# A tibble: 819 × 25\n   cruise_id station   site   mesh date_time           date                 year\n   &lt;chr&gt;     &lt;fct&gt;     &lt;fct&gt; &lt;dbl&gt; &lt;dttm&gt;              &lt;dttm&gt;              &lt;dbl&gt;\n 1 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 2 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 3 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 4 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 5 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 6 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 7 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 8 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n 9 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n10 WS17170   Looe Key… LK      200 2017-06-20 15:33:00 2017-06-20 00:00:00  2017\n# ℹ 809 more rows\n# ℹ 18 more variables: date_month &lt;date&gt;, time_gmt &lt;time&gt;, lat_in &lt;dbl&gt;,\n#   lon_in &lt;dbl&gt;, maximumDepthInMeters &lt;dbl&gt;, volume_filt_cubic_m &lt;dbl&gt;,\n#   taxa &lt;chr&gt;, scientificname &lt;chr&gt;, lifeStage &lt;chr&gt;, ind_m3 &lt;dbl&gt;,\n#   number_ind_sample &lt;dbl&gt;, kingdom &lt;chr&gt;, phylum &lt;chr&gt;, class &lt;chr&gt;,\n#   order &lt;chr&gt;, family &lt;chr&gt;, genus &lt;chr&gt;, taxa_level &lt;chr&gt;\n\n\n\n\nCode\ndat_lowest_200 %&gt;%\n    summarise(\n    .by = c(station, site, year, date_month, taxa_level),\n    # ind_m3 = mean(ind_m3)\n    ind_m3 = sum(ind_m3)\n  ) %&gt;%\n  mutate(\n    .by     = c(site, date_month),\n    total   = sum(ind_m3),\n    percent = ind_m3 / total\n  ) %&gt;%\n  mutate(\n    taxa_level = fct_reorder(taxa_level, percent, .fun = mean),\n    date_month2 = fct_reorder(format(date_month, \"%b %Y\"), date_month)\n  ) %&gt;%\n  ggplot(\n    aes(x = date_month2, y = percent, fill = taxa_level, \n        color = after_scale(prismatic::clr_darken(fill, 0.3))\n        )\n         ) +\n  geom_col() +\n  geom_point(aes(y = total / 10000), color = \"red\", fill = \"white\", shape = 21) +\n  geom_hline(yintercept = -0.005, linewidth = rel(1)) +\n  labs(\n    y = NULL,\n    x = NULL,\n    fill = str_to_sentence(const$taxa_lvl),\n    title = NULL\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    labels = scales::label_percent(),\n     sec.axis = sec_axis(transform = ~ .x * 10000, \n                         name = expression(paste(\"# Individual m\")^-3)\n                         )\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 1, byrow = TRUE)) +\n  theme_classic() +\n  facet_wrap(~station, ncol = 1, strip.position = \"top\") +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.line.x.bottom = element_blank(),\n    axis.text.y.right     = element_text(color = \"red\"),\n    axis.title.y.right    = element_text(color = \"red\"),\n    axis.ticks.y.right    = element_line(color = \"red\")\n  ) \n\n\n\n\n\n\n\n\n\n\n\nCode\ndat_lowest_200 %&gt;%\n    summarise(\n    .by = c(station, site, year, date_month, taxa_level),\n    # ind_m3 = mean(ind_m3)\n    ind_m3 = sum(ind_m3)\n  ) %&gt;%\n  mutate(\n    .by     = c(site, date_month),\n    total   = sum(ind_m3),\n    percent = ind_m3 / total\n  ) %&gt;%\n  mutate(\n    taxa_level = fct_reorder(taxa_level, percent, .fun = max),\n    date_month2 = fct_reorder(format(date_month, \"%b %Y\"), date_month)\n  ) %&gt;%\n  ggplot(\n    aes(x = date_month2, y = ind_m3, fill = taxa_level, \n        color = after_scale(prismatic::clr_darken(fill, 0.3))\n        )\n         ) +\n  geom_col() +\n  geom_hline(yintercept = -0.005, linewidth = rel(1)) +\n  labs(\n    y = NULL,\n    x = \"Year\",\n    fill  = const$taxa_lvl,\n    title = NULL\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0)\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 1, byrow = TRUE)) +\n  theme_classic() +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.line.x.bottom = element_blank(),\n  ) +\n  facet_wrap(~station, ncol = 1)"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#μm-1",
    "href": "qmd/mbon_zoo_viz.html#μm-1",
    "title": "MBON Zooplankton Quick Visual",
    "section": "7.2 500 μm",
    "text": "7.2 500 μm\n\n\nCode\ndat_lowest_500 &lt;-\n  dat %&gt;%\n  filter(\n    !str_detect(site, \"9B\") # site\n    # str_detect(site, const$site) # site\n    & mesh == 500        # mesh size\n    & is.na(lifeStage)           # assumed na is adult\n  )  %&gt;% \n  mutate(\n    site = fct(site, c(\"MR\", \"LK\", \"WS\")),\n    station = fct(station, c(\"Molasses Reef\", \"Looe Key (deep)\", \"Western Sambo\")), \n    # select the lowest taxa name available\n    taxa_level = pmap_chr(\n      across(c(const$taxa_lvl)),\n      \\(...) {\n        dat &lt;- c(...) # combine all names into a vector\n        taxa_name &lt;- NA\n        # loop through all names to select the lowest name\n        for (i in seq(length(dat))) {\n          if (is.na(taxa_name)) {\n            taxa_name &lt;- dat[i]\n          } else {\n            taxa_name\n          }\n        }\n        return(taxa_name)\n      }\n    ),\n  ) %T&gt;%\n  print() \n\n\n# A tibble: 790 × 25\n   cruise_id station   site   mesh date_time           date                 year\n   &lt;chr&gt;     &lt;fct&gt;     &lt;fct&gt; &lt;dbl&gt; &lt;dttm&gt;              &lt;dttm&gt;              &lt;dbl&gt;\n 1 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 2 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 3 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 4 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 5 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 6 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 7 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 8 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 9 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n10 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n# ℹ 780 more rows\n# ℹ 18 more variables: date_month &lt;date&gt;, time_gmt &lt;time&gt;, lat_in &lt;dbl&gt;,\n#   lon_in &lt;dbl&gt;, maximumDepthInMeters &lt;dbl&gt;, volume_filt_cubic_m &lt;dbl&gt;,\n#   taxa &lt;chr&gt;, scientificname &lt;chr&gt;, lifeStage &lt;chr&gt;, ind_m3 &lt;dbl&gt;,\n#   number_ind_sample &lt;dbl&gt;, kingdom &lt;chr&gt;, phylum &lt;chr&gt;, class &lt;chr&gt;,\n#   order &lt;chr&gt;, family &lt;chr&gt;, genus &lt;chr&gt;, taxa_level &lt;chr&gt;\n\n\n\n\nCode\ndat_lowest_500 %&gt;%\n  summarise(\n    .by = c(station, site, year, date_month, taxa_level),\n    # ind_m3 = mean(ind_m3)\n    ind_m3 = sum(ind_m3)\n  ) %&gt;%\n  mutate(\n    .by     = c(site, date_month),\n    total   = sum(ind_m3),\n    percent = ind_m3 / total\n  ) %&gt;%\n  mutate(\n    taxa_level  = fct_reorder(taxa_level, percent, .fun = max),\n    date_month2 = fct_reorder(format(date_month, \"%b %Y\"), date_month)\n  ) %&gt;%\n  ggplot(\n    aes(\n      x = date_month2, y = percent, fill = taxa_level,\n      color = after_scale(prismatic::clr_darken(fill, 0.3))\n    )\n  ) +\n  geom_col() +\n  geom_point(aes(y = (total / 1000)), color = \"red\", fill = \"white\", shape = 21) +\n  geom_hline(yintercept = -0.005, linewidth = rel(1)) +\n  labs(\n    y = NULL,\n    x = NULL,\n    fill  = str_to_sentence(const$taxa_lvl),\n    title = NULL\n  ) +\n  scale_y_continuous(\n    expand   = c(0, 0),\n    labels   = scales::label_percent(),\n    sec.axis = sec_axis(transform = ~ .x * 1000, \n                        name = expression(paste(\"# Individual m\")^-3)\n                        )\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 1, byrow = TRUE)) +\n  theme_classic() +\n  facet_wrap(~station, ncol = 1) +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x           = element_text(angle = 45, hjust = 1),\n    axis.line.x.bottom    = element_blank(),\n    axis.line.x.top       = element_line(color = \"black\", linewidth = rel(1)),\n    axis.text.y.right     = element_text(color = \"red\"),\n    axis.title.y.right    = element_text(color = \"red\"),\n    axis.ticks.y.right    = element_line(color = \"red\")\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\ndat_lowest_500 %&gt;%\n    summarise(\n    .by = c(station, site, year, date_month, taxa_level),\n    # ind_m3 = mean(ind_m3)\n    ind_m3 = sum(ind_m3)\n  ) %&gt;%\n  mutate(\n    .by     = c(site, date_month),\n    total   = sum(ind_m3),\n    percent = ind_m3 / total\n  ) %&gt;%\n  mutate(\n    taxa_level  = fct_reorder(taxa_level, percent, .fun = max),\n    date_month2 = fct_reorder(format(date_month, \"%b %Y\"), date_month)\n  ) %&gt;%\n  ggplot(\n    aes(x = date_month2, \n        y = ind_m3, \n        fill = taxa_level, \n        color = after_scale(prismatic::clr_darken(fill, 0.3))\n        )\n         ) +\n  geom_col() +\n  labs(\n    y = NULL,\n    x = \"Year\",\n    fill  = const$taxa_lvl,\n    title = NULL\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0)\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 1, byrow = TRUE)) +\n  theme_classic() +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  ) +\n  facet_wrap(~station, ncol = 1)"
  },
  {
    "objectID": "qmd/mbon_zoo_viz.html#both",
    "href": "qmd/mbon_zoo_viz.html#both",
    "title": "MBON Zooplankton Quick Visual",
    "section": "7.3 Both",
    "text": "7.3 Both\n\n\nCode\ndat_lowest_both &lt;-\n  dat %&gt;%\n  filter(\n    !str_detect(site, \"9B|57\") # site\n    & (mesh == 200 | mesh == 500)           # mesh size\n    & is.na(lifeStage)      # assumed na is adult\n  )  %&gt;% \n  mutate(\n    site = fct(site, c(\"MR\", \"LK\", \"WS\")),\n    station = fct(station, c(\"Molasses Reef\", \"Looe Key (deep)\", \"Western Sambo\")), \n    # select the lowest taxa name available\n    taxa_level = pmap_chr(\n      across(c(const$taxa_lvl)),\n      \\(...) {\n        dat &lt;- c(...) # combine all names into a vector\n        taxa_name &lt;- NA\n        # loop through all names to select the lowest name\n        for (i in seq(length(dat))) {\n          if (is.na(taxa_name)) {\n            taxa_name &lt;- dat[i]\n          } else {\n            taxa_name\n          }\n        }\n        return(taxa_name)\n      }\n    ),\n  ) %T&gt;%\n  print() \n\n\n# A tibble: 1,609 × 25\n   cruise_id station   site   mesh date_time           date                 year\n   &lt;chr&gt;     &lt;fct&gt;     &lt;fct&gt; &lt;dbl&gt; &lt;dttm&gt;              &lt;dttm&gt;              &lt;dbl&gt;\n 1 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 2 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 3 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 4 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 5 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 6 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 7 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 8 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n 9 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n10 WS17170   Molasses… MR      500 2017-06-19 00:21:00 2017-06-19 00:00:00  2017\n# ℹ 1,599 more rows\n# ℹ 18 more variables: date_month &lt;date&gt;, time_gmt &lt;time&gt;, lat_in &lt;dbl&gt;,\n#   lon_in &lt;dbl&gt;, maximumDepthInMeters &lt;dbl&gt;, volume_filt_cubic_m &lt;dbl&gt;,\n#   taxa &lt;chr&gt;, scientificname &lt;chr&gt;, lifeStage &lt;chr&gt;, ind_m3 &lt;dbl&gt;,\n#   number_ind_sample &lt;dbl&gt;, kingdom &lt;chr&gt;, phylum &lt;chr&gt;, class &lt;chr&gt;,\n#   order &lt;chr&gt;, family &lt;chr&gt;, genus &lt;chr&gt;, taxa_level &lt;chr&gt;\n\n\n\n\nCode\ndat2 &lt;- \n  dat_lowest_both %&gt;%\n  summarise(\n    .by = c(station, site, mesh, year, date_month, taxa_level),\n    # ind_m3 = mean(ind_m3)\n    ind_m3 = sum(ind_m3)\n  ) %&gt;%\n  mutate(\n    .by     = c(site, mesh, date_month),\n    total   = sum(ind_m3),\n    percent = ind_m3 / total\n  ) %&gt;%\n  mutate(\n    taxa_level = fct_reorder(taxa_level, percent, .fun = max),\n    date_month2 = fct_reorder(format(date_month, \"%b %Y\"), date_month)\n  ) \n\ndat2 %&gt;%\n  filter(mesh == 200) %&gt;%\n  ggplot(\n    aes(x = date_month2, y = percent, fill = taxa_level, \n        color = after_scale(prismatic::clr_darken(fill, 0.3))\n        )\n         ) +\n  geom_col() +\n  geom_point(aes(y = (total / 10000)), color = \"black\", fill = \"white\", shape = 21) +\n  geom_hline(yintercept = -0.005, linewidth = rel(1)) +\n  labs(\n    y = NULL,\n    x = NULL,\n    fill = str_to_sentence(const$taxa_lvl),\n    title = NULL\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    labels = scales::label_percent(),\n    sec.axis = sec_axis(transform = ~ .x * 10000)\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 1, reverse = TRUE)) +\n  theme_classic() +\n  facet_grid(station~mesh, scales = \"free\") +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x           = element_text(angle = 45, hjust = 1),\n    panel.spacing.y       = unit(0.75, \"lines\"),\n    panel.spacing.x       = unit(0.75, \"lines\"),\n    axis.line.x.bottom    = element_blank(),\n  ) \n\n\n\n\n\n\n\n\n\nCode\ndat2 %&gt;%\n  filter(mesh == 500) %&gt;%\n  ggplot(\n    aes(x = date_month2, y = percent, fill = taxa_level, \n        color = after_scale(prismatic::clr_darken(fill, 0.3))\n        )\n         ) +\n  geom_col() +\n  geom_point(aes(y = (total / 1000)), color = \"black\", fill = \"white\", shape = 21) +\n  geom_hline(yintercept = -0.005, linewidth = rel(1)) +\n  labs(\n    y = NULL,\n    x = NULL,\n    fill = str_to_sentence(const$taxa_lvl),\n    title = NULL\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    labels = scales::label_percent(),\n    sec.axis = sec_axis(transform = ~ .x * 1000 )\n  ) +\n  scale_fill_viridis_d(option = \"A\") +\n  guides(fill = guide_legend(ncol = 1, reverse = TRUE)) +\n  theme_classic() +\n  facet_grid(station~mesh, scales = \"free\") +\n  theme(\n    legend.box.background = element_rect(color = \"grey\"),\n    axis.text.x           = element_text(angle = 45, hjust = 1),\n    panel.spacing.y       = unit(0.75, \"lines\"),\n    panel.spacing.x       = unit(0.75, \"lines\"),\n    axis.line.x.bottom    = element_blank(),\n  )"
  }
]